---

/**
 * Author: José Antonio González and Kenia Esmeralda Ramos Javier
 * Description: This is the page where we separate the content that is stablished for a certain user of Account Payable team.
 * 
 */
export const prerender = false;
import MainLayout from "@layouts/MainLayout.astro";
import TextHeader from "@components/TextHeader.astro";
import ReceiptActions from "@components/ReceiptActions";
import type { UserRole } from "@type/roles";
import FinishRequestButton from "@components/FinisCheck.tsx";

import { getCookie } from "@data/cookies";
import { roleLabels } from "@config/role-labels";

const role: UserRole = getCookie("role", Astro.cookies) as UserRole;
const userName = getCookie("username", Astro.cookies);
const buttonLabel = roleLabels[role];



const status_colors = {
  'Pending': 'text-warning-400',
  'Aproved': 'text-success-400',
  'Declined': 'text-danger-400',
};

const validationColors = {
  "Aprobado": "text-green-500",
  "Rechazado": "text-red-500",
  "Pendiente": "text-yellow-500",
};

import { apiRequest } from "@/utils/apiClient";

const { id } = Astro.params;
let request = null;
try {
  request = await apiRequest(`/accounts-payable/get-expense-validations/${id}`, { cookies: Astro.cookies });
  console.log(request);
} catch (error) {
  request = null;
  throw new Error(`No request found with ID ${id}`);
  return Astro.redirect('/404');
}

const numericId = Number(id);
if (isNaN(numericId)) {
  throw new Error(`El ID debe ser numérico. Recibido: ${id}`);
}

const enrichedExpenses = await Promise.all(
  request.Expenses.map(async (receipt: any) => {
    const fileMap = await apiRequest(`/files/receipt-files/${receipt.receipt_id}`, { cookies: Astro.cookies });
    return { ...receipt, fileMap };
  })
);

const allReviewed = enrichedExpenses.every((receipt: any) => receipt.validation !== "Pendiente");
---

<MainLayout title={`Solicitud #${request.request_id}`} data={{ userName, buttonLabel, role }} >

<main class="flex flex-col items-center">
  <div class="w-full flex flex-col rounded border border-gray-300 p-10">

    <div class="flex justify-between items-center">
  <TextHeader
    title={`SOLICITUD #${request.request_id}`}
    subtitle="Comprobantes de Gastos"
  />

  <div class="flex items-center gap-4">
    <h1 class={`text-m ${status_colors[request.status as keyof typeof status_colors]} font-semibold`}>
      Sin Pendientes
    </h1>

    {allReviewed && (
      <FinishRequestButton
        client:only="react"
        requestId={request.request_id}
        token={getCookie("token", Astro.cookies)}
      />
    )}
  </div>
</div>
  <div>
    <h3 class="text-xl font-semibold text-gray-800 mb-4 border-b pb-2">Comprobantes</h3>

    {enrichedExpenses.length === 0 ? (
      <div class="bg-gray-100 p-6 rounded-lg shadow w-full text-center text-gray-500 font-semibold">
        NO HAY COMPROBANTES DE GASTOS PENDIENTES DE COMPROBAR
      </div>
    ) : (
      <div class="grid gap-4">     
        {enrichedExpenses.map((receipt: any) => {
          const pdf = receipt.fileMap?.pdf;
          const xml = receipt.fileMap?.xml;

          return (
            <div class="grid grid-cols-[2fr_2fr_1fr] gap-6">
              
              <div class="col-span-2 space-y-2 content-wrapper">
                <p class="font-bold text-lg break-words">#{receipt.receipt_id}</p>
                <div class="text-sm text-gray-700 grid grid-cols-[1fr_2fr] gap-y-1">
                  
                  <p><span class="font-semibold">Monto:</span> {receipt.amount} <span>MXN </span> </p>
                  <p><span class="font-semibold">Rubro:</span> {receipt.receipt_type_name}</p>
                  
                  <p class="flex items-center gap-2">
                    <span class="font-semibold">Status:</span>
                    <span class={`inline-block px-3 py-1 text-xs font-semibold rounded-full ${validationColors[receipt.validation] || "text-gray-400"}`}>
                      {receipt.validation}
                    </span>

                  </p>
                </div>
              </div>

              <div class="flex flex-col justify-center h-full gap-3">
                {pdf && (
                      <a href={`https://localhost:3000/api/files/receipt-file/${pdf.fileId}`}>
                        <button class="btn bg-primary-300 rounded w-full h-12 flex flex-col items-center justify-center hover:bg-blue-300 transition-colors gap-y-1">
                          <span class="text-xs font-semibold">Nombre de archivo: {pdf.fileName}</span>
                          <span class="text-sm">Descargar PDF</span>
                        </button>
                      </a>
                    )}

                    {xml && (
                      <a href={`https://localhost:3000/api/files/receipt-file/${xml.fileId}`}>
                        <button class="btn bg-primary-300 rounded w-full h-12 flex flex-col items-center justify-center hover:bg-blue-300 transition-colors gap-y-1">
                          <span class="text-xs font-semibold">Nombre de archivo: {xml.fileName}</span>
                          <span class="text-sm">Descargar XML</span>
                        </button>
                      </a>
                    )}

                <ReceiptActions
                  client:only="react"
                  receipt_id={receipt.receipt_id}
                  expense_status={receipt.expense_status}
                  disabled={receipt.validation !== "Pendiente"}
                  onApprove={() => { /* No se usa*/ }}
                  onReject={() => { /* No se usa */ }}
                  token={getCookie("token", Astro.cookies)}
                />
              </div>
            </div>    
          );
        })}
      </div>
    )}
  </div>
  
</div>
</main>

</MainLayout>
