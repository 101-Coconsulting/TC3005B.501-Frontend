---
/**
* Authors: Eduardo Porto Morales
* Description: This page allows the user to view and manage their draft requests.
**/

import MainLayout from "@layouts/MainLayout.astro";
import TextHeader from "@components/TextHeader.astro";
import type { UserRole } from "@type/roles";

import { getCookie } from "@data/cookies";
import { roleLabels } from "@config/role-labels";
import { apiRequest } from '@utils/apiClient';

const role: UserRole = getCookie("role", Astro.cookies) as UserRole;
const userName = getCookie("username", Astro.cookies);
const buttonLabel = roleLabels[role];
const user_id = getCookie("id");

function getVerificationStats(request: any) {
  const verifications = Array.isArray(request.verifications) ? request.verifications : [];
  const total = verifications.length;
  const accepted = verifications.filter((v: any) => v.validation === 'Aprobado').length;
  const rejected = verifications.filter((v: any) => v.validation === 'Rechazado').length;
  const pending = verifications.filter((v: any) => v.validation === 'Pendiente').length;
  return { total, accepted, rejected, pending };
}

// Obtener solicitudes
const requestsRaw = await (async () => {
  try {
    const requests = await apiRequest(`/applicant/get-user-requests/${user_id}`);
    return Array.isArray(requests)
      ? requests.filter((request: any) => request.status === 'Comprobación gastos del viaje')
      : [];
  } catch (error) {
    return [];
  }
})();

// Agregar verificaciones a cada solicitud
const requests = await Promise.all(
  requestsRaw.map(async (request: any) => {
    try {
      const { Expenses } = await apiRequest(`/accounts-payable/get-expense-validations/${request.request_id}`);
      return { ...request, verifications: Expenses ?? [] };
    } catch (e) {
      console.error(`Error al cargar verificaciones de ${request.request_id}`, e);
      return { ...request, verifications: [] };
    }
  })
);
---

<MainLayout title="Dashboard" data={{ userName, buttonLabel, role }} showMessages={role !== "Applicant"}>
  <div>
    <main>
      <TextHeader
        title={`COMPROBACIONES PENDIENTES DE ${userName.toUpperCase()}`}
        subtitle="Aquí puedes conocer el estado de solicitudes en proceso de comprobación"
      />
      <section class="bg-white p-6 rounded-lg shadow w-full">
        {requests.length > 0 ? (
          <div class="grid gap-8">
            {requests.map((request: any) => {
              const { total, accepted, rejected, pending } = getVerificationStats(request);
              const percent = (count: number) => total ? (count / total) * 100 : 0;
              return (
                <div class="grid grid-cols-[1fr_auto] items-center rounded-lg">
                  <a href={`/comprobar-solicitud/${request.request_id}`} class="block w-full">
                    <div class="space-y-2 content-wrapper">
                      <div class="flex items-center justify-between">
                        <p class="font-bold text-lg break-words">#{request.request_id}</p>
                        <p class="text-sm text-gray-500">{accepted}/{total} ACEPTADAS</p>
                      </div>

                      <div class="w-full h-2 bg-gray-200 rounded overflow-hidden flex">
                        <div class="bg-green-500 h-full" style={`width: ${percent(accepted)}%`} />
                        <div class="bg-red-500 h-full" style={`width: ${percent(rejected)}%`} />
                        <div class="bg-yellow-400 h-full" style={`width: ${percent(pending)}%`} />
                      </div>

                      <div class="text-sm text-gray-700 grid grid-cols-[1fr_2fr] gap-y-1">
                        <p><span class="font-semibold">Lugar:</span> {request.destination_country}</p>
                        <p><span class="font-semibold">Fechas:</span> {request.beginning_date} - {request.ending_date}</p>
                        <p>
                          <span class="font-semibold">Estado:</span> 
                          <span
                            class={`ml-1 font-semibold ${
                              pending > 0
                                ? 'text-yellow-600'
                                : accepted === total
                                  ? 'text-green-600'
                                  : rejected === total
                                    ? 'text-red-600'
                                    : 'text-blue-600'
                            }`}
                          >
                            {pending > 0
                              ? 'PENDIENTE'
                              : accepted === total
                                ? 'ACEPTADA'
                                : rejected === total
                                  ? 'RECHAZADA'
                                  : 'MIXTA'}
                          </span>
                        </p>
                        <p><span class="font-semibold">Responsable:</span> Eduardo Porto Morales</p>
                      </div>
                    </div>
                  </a>
                </div>
              );
            })}
          </div>
        ) : (
          <div class="bg-gray-100 p-6 rounded-lg shadow w-full text-center text-gray-500 font-semibold">
            NO TIENES COMPROBACIONES PENDIENTES
          </div>
        )}
      </section>
    </main>
  </div>
</MainLayout>