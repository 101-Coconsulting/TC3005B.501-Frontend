---
import { apiRequest } from "@/utils/apiClient";
import { getCookie } from "@data/cookies";

// Diccionario de status según el rol que accede
const statusByRole = {
  'Solicitante': 1,
  'Agencia de viajes': 2,
  'Cuentas por pagar': 3,
  'N1': 4,
  'N2': 5,
  'Administrador': 6,
};

type UserRole = keyof typeof statusByRole;
const userRole = getCookie("role", Astro.cookies) as UserRole;
const status = statusByRole[userRole];
const alerts = await (async () => {
  try {
    return await apiRequest(`/authorizer/get-alerts/${getCookie("department_id", Astro.cookies)}/${status}/10`, { cookies: Astro.cookies });
  } catch (error) {
    return [];
  }
})()
---

<div class="h-full">
  <h2 class="text-xl font-bold text-neutral-800 mb-6">NOTIFICACIONES DEL SISTEMA</h2>
  <ul class="space-y-4 pb-8">
    {alerts.length === 0 && (
      <li>
        <div class="flex flex-col p-4 h-48 border border-neutral-200 rounded-xl shadow-md">
          <span class="text-lg text-neutral-700 font-semibold">No hay notificaciones disponibles</span>
          <span class="text-sm text-neutral-500 mt-1">Las notificaciones del sistema aparecerán aquí cuando estén disponibles.</span>
        </div>
      </li>
    )}
    {alerts.map((alert:any) => (
      <li class="relative bg-gray-50 border border-neutral-200 rounded-xl p-4 shadow-sm">
        <div class="mb-4">
          <p class="text-xs text-neutral-500 mb-2">
            {
              new Date(alert.alert_date.replace(/:([0-9]{3})Z$/, '.$1Z'))
              .toLocaleDateString('es-MX', { year: 'numeric', month: 'long', day: 'numeric' })
            } - {alert.alert_time}
          </p>
          <p class="text-xs text-neutral-500 mb-2">Usuario: <span class="font-semibold">{alert.user_name}</span></p>
          <p class="text-xs text-neutral-500 mb-2">ID de Solicitud: <span class="font-semibold">{alert.request_id}</span></p>
        </div>
        <div>
          <p class="text-sm text-gray-800">{alert.message_text}</p>
        </div>
      </li>
    ))}
  </ul>
</div>
